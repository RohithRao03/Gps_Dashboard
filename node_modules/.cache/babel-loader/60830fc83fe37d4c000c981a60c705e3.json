{"ast":null,"code":"var _jsxFileName = \"/Users/kottedheeru/Documents/gps_dashboard/src/Dropdown.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport RegionContext from './regionContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  }\n}));\nexport default function ControlledOpenSelect() {\n  _s();\n\n  const classes = useStyles();\n  const [region, setRegion] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = event => {\n    setRegion(event.target.value);\n    console.log(region);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(RegionContext.Provider, {\n    value: {\n      region: region\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        style: {\n          minWidth: 250\n        },\n        children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n          id: \"demo-controlled-open-select-label\",\n          children: \"Region\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"demo-controlled-open-select-label\",\n          id: \"demo-controlled-open-select\",\n          open: open,\n          onClose: handleClose,\n          onOpen: handleOpen,\n          value: region,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"None\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: APAC,\n            children: \"APAC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: EUROPE,\n            children: \"EUROPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: AMERICAS,\n            children: \"AMERICAS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ControlledOpenSelect, \"kKYxu3r780d+yBSSYQkvqfRkhDY=\", false, function () {\n  return [useStyles];\n});\n\n_c = ControlledOpenSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"ControlledOpenSelect\");","map":{"version":3,"sources":["/Users/kottedheeru/Documents/gps_dashboard/src/Dropdown.js"],"names":["React","makeStyles","InputLabel","MenuItem","FormControl","Select","Button","RegionContext","useStyles","theme","button","display","marginTop","spacing","formControl","margin","minWidth","ControlledOpenSelect","classes","region","setRegion","useState","open","setOpen","handleChange","event","target","value","console","log","handleClose","handleOpen","APAC","EUROPE","AMERICAS"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,SAAS,GAAGP,UAAU,CAAEQ,KAAD,KAAY;AACvCC,EAAAA,MAAM,EAAE;AACNC,IAAAA,OAAO,EAAE,OADH;AAENC,IAAAA,SAAS,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFL,GAD+B;AAKvCC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAEN,KAAK,CAACI,OAAN,CAAc,CAAd,CADG;AAEXG,IAAAA,QAAQ,EAAE;AAFC;AAL0B,CAAZ,CAAD,CAA5B;AAWA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAC7C,QAAMC,OAAO,GAAGV,SAAS,EAAzB;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBpB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAA5B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBvB,KAAK,CAACqB,QAAN,CAAe,KAAf,CAAxB;;AAEA,QAAMG,YAAY,GAAIC,KAAD,IAAW;AAC9BL,IAAAA,SAAS,CAACK,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYV,MAAZ;AACD,GAHD;;AAKA,QAAMW,WAAW,GAAG,MAAM;AACxBP,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMQ,UAAU,GAAG,MAAM;AACvBR,IAAAA,OAAO,CAAC,IAAD,CAAP;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAE;AAACJ,MAAAA,MAAM,EAAEA;AAAT,KAA/B;AAAA,2BACE;AAAA,6BACE,QAAC,WAAD;AAAa,QAAA,SAAS,EAAED,OAAO,CAACJ,WAAhC;AAA6C,QAAA,KAAK,EAAE;AAACE,UAAAA,QAAQ,EAAE;AAAX,SAApD;AAAA,gCACE,QAAC,UAAD;AAAY,UAAA,EAAE,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,MAAD;AACE,UAAA,OAAO,EAAC,mCADV;AAEE,UAAA,EAAE,EAAC,6BAFL;AAGE,UAAA,IAAI,EAAEM,IAHR;AAIE,UAAA,OAAO,EAAEQ,WAJX;AAKE,UAAA,MAAM,EAAEC,UALV;AAME,UAAA,KAAK,EAAEZ,MANT;AAOE,UAAA,QAAQ,EAAEK,YAPZ;AAAA,kCASE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAC,EAAhB;AAAA,mCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF,eAYE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEQ,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAZF,eAaE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAbF,eAcE,QAAC,QAAD;AAAU,YAAA,KAAK,EAAEC,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD;;GA3CuBjB,oB;UACNT,S;;;KADMS,oB","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Button from '@material-ui/core/Button';\nimport RegionContext from './regionContext';\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2),\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120,\n  },\n}));\n\nexport default function ControlledOpenSelect() {\n  const classes = useStyles();\n  const [region, setRegion] = React.useState('');\n  const [open, setOpen] = React.useState(false);\n\n  const handleChange = (event) => {\n    setRegion(event.target.value);\n    console.log(region);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <RegionContext.Provider value={{region: region,}}>\n      <div>\n        <FormControl className={classes.formControl} style={{minWidth: 250}} >\n          <InputLabel id=\"demo-controlled-open-select-label\">Region</InputLabel>\n          <Select\n            labelId=\"demo-controlled-open-select-label\"\n            id=\"demo-controlled-open-select\"\n            open={open}\n            onClose={handleClose}\n            onOpen={handleOpen}\n            value={region}\n            onChange={handleChange}\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            <MenuItem value={APAC}>APAC</MenuItem>\n            <MenuItem value={EUROPE}>EUROPE</MenuItem>\n            <MenuItem value={AMERICAS}>AMERICAS</MenuItem>\n          </Select>\n        </FormControl>\n      </div>\n    </RegionContext.Provider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}